#!/usr/local/bin/bash
#set -x

#VERSION="0.2.4-CURRENT"
VERSION="0.2.4"

#
LETSENCRYPT="/usr/local/bin/certbot"
LEROOT="/usr/local/etc/letsencrypt"
OPENSSL="/usr/bin/openssl"
X509OPTS="x509 -dates -email -issuer -subject -serial -noout -in"

#
#WEBSERVER="NONE"
WEBSERVER="APACHE"
APACHECTL="/usr/local/sbin/apachectl"
APACHESTATUS="$APACHECTL status"
APACHESTOP="$APACHECTL -k graceful-stop"
APACHERESTART="$APACHECTL -k graceful"
#APACHE="apache24"
#APACHESTATUS="/usr/local/etc/rc.d/$APACHE status"
#APACHESTOP="/usr/local/etc/rc.d/$APACHE gracefulstop"
#APACHESTART="/usr/local/etc/rc.d/$APACHE graceful"

#
MAILSERVER="NONE"
#MAILSERVER="postfix"

#
LOGTOFILE="1"
LOGFILE="/var/log/le-utils"

[ -f /etc/le-utils ] && . /etc/le-utils
[ -f /usr/local/etc/le-utils ] && . /usr/local/etc/le-utils
[ -f ~/.le-utils ] && . ~/.le-utils
[ -f ./.le-utils ] && . ./.le-utils

USAGE="
lectl [-V|--version] [-h|--help] [-s|--silent] [-d|--debug]
      [-l|--list] [-r|--raw]
      [-e|--expire] [-D=NoOfDays|--Days=NoOfDays]
      [-c|--renew] [-n|--dryrun] [-a|--all|<CN>]
      -- Letsencrypt certificates management

where:
 -V --version ....... print version end exit
 -h --help .......... show this help and exit
 -l --list .......... list domains and exit
 -r --raw ........... print raw output of openssl x509 command
 -e --expire ........ show number of days till certificate expires
 -D --Days=NoOfDays . with -e list certificates that will expire in period of NoOfDays
 -s --silent ........ print errors only; with -e only report number of days to expire
 -d --debug ......... print debug output
 -c --renew ......... renew cerficates (Note 2,3)
 -n --dryrun ........ with -c dry run only
 -a --all ........... check all domains (CN)
 <CN> ............... check domain (CN)(Note 1)

Examples:
Print information about all domains
# lectl -a
Print raw output of openssl x509 command for example.com
# lectl -r example.com
List all certificates that will expire in less then 30 days
# lectl -e --Days=30 -a
Dry run renewal of all certificates (run daily in cron for feedback)
# lectl -n -c -a

Notes:
1) Renewal of single ceritificate
# /usr/local/bin/letsencrypt(certbot) renew --dry-run -d example.com
Currently, the renew verb is only capable of renewing all installed
certificates that are due to be renewed; individual domains cannot be
specified with this action. If you would like to renew specific
certificates, use the certonly command. The renew verb may provide
other options for selecting certificates to renew in the future.
2) Rate Limits for Letâ€™s Encrypt
https://community.letsencrypt.org/t/rate-limits-for-lets-encrypt
* limited to 20 certificates per domain per week
* limited to 5 certificates per FQDN set per week
* the number of registrations you can make in a given time period;
  currently 500 per 3 hours
3) Lifetime of the certificate (Pros and cons of 90-day
certificate lifetimes)
https://community.letsencrypt.org/t/pros-and-cons-of-90-day-certificate-lifetimes
The Technical Advisory Board chose
* 90-day certificate lifetime to start with
* with an expectation that people will want to auto-renew at the
  60-day mark."

EXPECTED_ARGS=1
if [ $# -lt $EXPECTED_ARGS ]; then
    echo "$USAGE"
    exit
fi

function log-ok {
    (($VERBOSE)) && printf "[OK]  lectl: $MESSAGE\n"
    (($LOGTOFILE)) && printf "`date "+%F %T"` [OK]  lectl: $MESSAGE\n" >> $LOGFILE
}
function log-dbg {
    if [ $DEBUG -eq 1 ]; then
	printf "[DBG] lectl: $MESSAGE\n"
	(($LOGTOFILE)) && printf "`date "+%F %T"` [DBG] lectl: $MESSAGE\n" >> $LOGFILE
    fi
}
function log-err {
    printf "[ERR] lectl: $MESSAGE\n"
    (($LOGTOFILE)) && printf "`date "+%F %T"` [ERR] lectl: $MESSAGE\n" >> $LOGFILE
}

function print-config {
    printf "[DBG] lectl: >>> CONFIG\n"
    printf "[DBG] lectl: LETSENCRYPT: $LETSENCRYPT\n"
    printf "[DBG] lectl: LEROOT: $LEROOT\n"
    printf "[DBG] lectl: OPENSSL: $OPENSSL\n"
    printf "[DBG] lectl: X509OPTS: $X509OPTS\n"
    printf "[DBG] lectl: LOGFILE: $LOGFILE\n"
    printf "[DBG] lectl: WEBSERVER: $WEBSERVER\n"
    printf "[DBG] lectl: MAILSERVER: $MAILSERVER\n"
    printf "[DBG] lectl: MODE: $MODE\n"
    printf "[DBG] lectl: ALLDOMAINS: $ALLDOMAINS\n"
    printf "[DBG] lectl: VERBOSE: $VERBOSE\n"
    printf "[DBG] lectl: DEBUG: $DEBUG\n"
    printf "[DBG] lectl: EXPIRE: $EXPIRE\n"
    printf "[DBG] lectl: RAW: $RAW\n"
    printf "[DBG] lectl: DRYRUN: $DRYRUN\n"
    printf "[DBG] lectl: DAYS: $DAYS\n"
    printf "[DBG] lectl: DOMAINS:\n $DOMAINS\n"
    printf "[DBG] lectl: <<< CONFIG\n"
}

function le-main {
    (($DEBUG)) && print-config
    case $MODE in
        1)  # info
            (($ALLDOMAINS)) && le-cert-info-all || le-cert-info
            ;;
        2)  # renewal
	    le-webserver-stop
            le-cert-renew
	    # TODO: do not start apache if it had not run before stop was issued.
	    le-webserver-restart
            ;;
        *)
	    MESSAGE=" Unknown mode: $MODE"; log-err
            exit
            ;;
    esac
}

function bsd-date {
    BSDDATE=$(LC_ALL=C date -j -f "%b %d %T %Y %Z" "$DATE")
    BSDSEC=$(LC_ALL=C date -j -f "%b %d %T %Y %Z" "$DATE" "+%s")
    EXPSEC=$(($BSDSEC - $(LC_ALL=C date +%s)))
    EXPDAYS=$(($EXPSEC / 86400))
}

function le-cert-info-all {
    for DOMAIN in $DOMAINS; do
	le-cert-info
    done
}

function le-cert-info {
    if  LOG=$(LC_ALL=C $OPENSSL $X509OPTS $LEROOT/live/$DOMAIN/fullchain.pem 2>&1); then
	if [[ $RAW = 1 ]]; then
	    printf "$LOG\n"
	else
	    NOTBEFORE=$(printf "${LOG}" | grep notBefore= | cut -d= -f 2)
	    NOTAFTER=$(printf "${LOG}" | grep notAfter= | cut -d= -f 2)
	    ISSUER=$(printf %s "${LOG}" | grep issuer= | cut -d= -f 2-99)
	    SUBJECT=$(printf "${LOG}" | grep subject= | cut -d= -f 2-99)
	    SERIAL=$(printf "${LOG}" | grep serial= | cut -d= -f 2)
	    if [[ $EXPIRE = 1 ]]; then
		DATE=$NOTAFTER; bsd-date
		[ $EXPDAYS -lt $DAYS ] && printf "%d" "$EXPDAYS"
		[ $EXPDAYS -lt $DAYS ] && (($VERBOSE)) && printf " days to the expiration of $DOMAIN\n"
	    else
		printf "[$NOTBEFORE] [$NOTAFTER] [$ISSUER] [$SUBJECT]\n"
	    fi
	fi
    else
	MESSAGE=" $LOG"; log-err
    fi
}

function le-cert-renew {
    if [ $ALLDOMAINS -eq 0 ]; then
	# $LETSENCRYPT renew $DRYRUN -d $DOMAIN
	MESSAGE=" Renewal of single certificate not available"; log-err
	exit
    else
	if LOG=$($LETSENCRYPT renew $DRYRUN  2>&1); then
	    [[ ! -z $LOG ]] && (MESSAGE=" $LETSENCRYPT log: \n$LOG"; log-ok)
	    MESSAGE=" $LETSENCRYPT renew $DRYRUN finished"; log-ok
	else
	    MESSAGE=" $LETSENCRYPT renew $DRYRUN error: $?"; log-err
	    MESSAGE=" $LETSENCRYPT renew $DRYRUN log: \n$LOG"; log-err
	fi
    fi
}

function le-webserver-status {
    case $WEBSERVER in
        none|NONE)
        ;;
        apache|APACHE)
	    if [ -e $APACHECTL ]; then
		$APACHESTATUS
		if  LOG=$($APACHESTATUS 2>&1); then
		    MESSAGE=" $WEBSERVER status: $LOG"; log-ok
		else
		    MESSAGE=" le-webserver-status: Status of $WEBSERVER failed"; log-err
		    MESSAGE=" le-webserver-status: $LOG"; log-err
		fi
	    else
		MESSAGE=" le-webserver-status: Can't find $APACHECTL. Set WEBSERVER to NONE, if no webserver is installed."; log-err
	    fi
            ;;
        *)
	    MESSAGE=" le-webserver-status: Unknown webserver: $WEBSERVER"; log-err
            exit 99
            ;;
    esac
}

function le-webserver-stop {
    case $WEBSERVER in
        none|NONE)
	    MESSAGE=" Webserver: $WEBSERVER"; log-ok
        ;;
        apache|APACHE)
	    if [ -e $APACHECTL ]; then
		if  LOG=$($APACHESTOP 2>&1); then
		    MESSAGE=" $WEBSERVER stopped"; log-ok
		else
		    MESSAGE=" le-webserver-stop: Stop of $WEBSERVER failed"; log-err
		    MESSAGE=" le-webserver-stop: $LOG"; log-err
		fi
	    else
		MESSAGE=" le-webserver-stop: Can't find $APACHECTL. Set WEBSERVER to NONE, if no webserver is installed."; log-err
	    fi
            ;;
        *)
	    MESSAGE=" le-webserver-stop: Unknown webserver: $WEBSERVER"; log-err
	    exit 99
            ;;
    esac
}

function le-webserver-restart {
    case $WEBSERVER in
        none|NONE)
        ;;
        apache|APACHE)
    	    if [ -e $APACHECTL ]; then
		if  LOG=$($APACHERESTART 2>&1); then
		    MESSAGE=" $WEBSERVER restarted"; log-ok
		else
		    MESSAGE=" le-webserver-restart: Restart of $WEBSERVER failed"; log-err
		    MESSAGE=" le-webserver-restart: $LOG"; log-err
		    exit 99
		fi
	    else
		MESSAGE=" le-webserver-restart: Can't find $APACHECTL. Set WEBSERVER to NONE, if no webserver is installed."; log-err
	    fi
            ;;
        *)
	    MESSAGE=" le-webserver-restart: Unknown webserver: $WEBSERVER"; log-err
            exit 99
            ;;
    esac
}

MODE="1" # 1-info 2-renew
ALLDOMAINS="0"
VERBOSE="1"
DEBUG="0"
EXPIRE="0"
RAW="0"
DRYRUN=""
DAYS="999999"
DOMAINS=$(cd $LEROOT/live; ls -1)
for i in "$@"; do
    case $i in
        -V|--version)
	    printf "$VERSION\n"
            exit
            ;;
        -h|--help)
            printf "$USAGE\n"
            exit
            ;;
        -l|--list)
            printf "$DOMAINS\n"
            exit
            ;;
	-e|--expire)
	    EXPIRE="1"
	    ;;
	-D=*|--Days=*)
	    DAYS="${i#*=}"
	    ;;
        -r|--raw)
            RAW="1"
            ;;
        -s|--silent)
            VERBOSE="0"
            ;;
        -d|--debug)
            DEBUG="1"
            ;;
        -c|--renew)
	    MODE="2"
            ;;
        -n|--dryrun)
            DRYRUN=" --dry-run"
            ;;
        -a|--all)
	    ALLDOMAINS="1"
	    le-main
            ;;
        *)
            if [[ $DOMAINS =~ $i ]]; then
                DOMAIN=$i
		ALLDOMAINS="0"
                le-main
            else
                MESSAGE=" Unknown domain $i"; log-err
            fi
            ;;
    esac
done

exit 0
